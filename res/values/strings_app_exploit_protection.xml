<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="exploit_protection_category_title">Exploit protection</string>

    <string name="aep_allowed">Allowed</string>
    <string name="aep_blocked">Blocked</string>
    <string name="aep_default">Default (%1$s)</string>
    <string name="aep_disabled">Disabled</string>
    <string name="aep_enabled">Enabled</string>
    <string name="aep_restricted">Restricted</string>

    <string name="aep_confirm_disable_title">Warning</string>
    <string name="aep_confirm_disable_warning_msg">This setting will weaken exploit protections for the selected app.</string>
    <string name="aep_confirm_disable_proceed_btn">Proceed</string>

    <string name="aep_dvr_default_security_setting">Default value can be changed in the Security section</string>

    <string name="aep_ir_exploit_protection_compat_mode">%1$s is enabled</string>

    <string name="aep_compat_mode_title">Exploit protection compatibility mode</string>
    <string name="aep_compat_mode_summary">Improves compatibility by disabling some of the GrapheneOS exploit protections for this app</string>

    <string name="aep_hmalloc">Hardened memory allocator</string>
    <string name="aep_hmalloc_footer">
        Hardened memory allocator (hardened_malloc) provides substantial defenses against the most common classes of vulnerabilities (heap memory corruption) along with reducing the lifetime of sensitive data in memory.</string>
    <string name="aep_hmalloc_ir_no_native_code">This app doesn’t have native code</string>
    <string name="aep_hmalloc_ir_32_bit_native_code">This is a 32-bit app, hardened_malloc is 64-bit only</string>
    <string name="aep_hmalloc_ir_preinstalled_app">hardened_malloc is not allowed to be disabled for a preinstalled app</string>
    <string name="aep_hmalloc_ir_debuggable_app">This is a debuggable app, hardened_malloc can’t be disabled</string>
    <string name="aep_hmalloc_dvr_compat_config_opt_out">
Disabled by default, because this app is known to be incompatible with hardened_malloc.
This behavior can be disabled in the Security section.
    </string>

    <string name="aep_ext_va_space">Extended virtual address space</string>
    <string name="aep_ext_va_space_footer">Extends virtual addresss space from 39 to 48 bits, which significantly improves the address space layout randomization.</string>
    <string name="aep_ext_va_space_ir_32_bit_native_code">Incompatible with 32-bit apps</string>
    <string name="aep_ext_va_space_ir_hardened_malloc">Required by hardened_malloc</string>

    <string name="native_debug_dvr_is_system_app">Native debugging is always blocked for preinstalled apps</string>

    <string name="aep_memtag">Memory tagging</string>

    <string name="aep_memtag_footer">Memory tagging provides strong protections against exploitation of heap memory bugs (e.g. use-after-free, buffer overflow).</string>

    <string name="aep_memtag_dvr_is_system_app">Memory tagging is always enabled for preinstalled apps</string>

    <string name="aep_memtag_dvr_no_native_code">Memory tagging is always enabled for apps that don’t have native code</string>

    <string name="aep_memtag_dvr_manifest_opt_in">This app has opted-in to memory tagging</string>

    <string name="memtag_in_3p_apps_title">Memory tagging in third-party apps</string>
    <string name="memtag_in_3p_apps_main_switch_title">Enable by default</string>
    <string name="memtag_in_3p_apps_main_switch_summary">
        This setting doesn’t apply to apps that are known to be compatible with memory tagging</string>
    <string name="memtag_in_3p_apps_footer">"Memory tagging provides strong protections against exploitation of heap memory bugs (e.g. use-after-free, buffer overflow).

Memory tagging is always enabled for preinstalled apps and for third-party apps that are known to be
compatible with it (e.g. apps that don’t have native code), regardless of this setting."</string>

    <string name="memtag_in_3p_apps_enabled_by_default">Enabled by default</string>
    <string name="memtag_in_3p_apps_enabled_with_exceptions">
        Enabled, except for apps that might be incompatible with memory tagging</string>

</resources>
