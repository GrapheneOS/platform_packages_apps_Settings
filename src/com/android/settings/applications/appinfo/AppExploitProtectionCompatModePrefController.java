package com.android.settings.applications.appinfo;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.GosPackageState;

import androidx.preference.Preference;
import androidx.preference.SwitchPreference;

public class AppExploitProtectionCompatModePrefController extends AppInfoPreferenceControllerBase
    implements Preference.OnPreferenceChangeListener {

    public AppExploitProtectionCompatModePrefController(Context ctx, String key) {
        super(ctx, key);
    }

    @Override
    public int getAvailabilityStatus() {
        ApplicationInfo ai = mParent.getPackageInfo().applicationInfo;
        return ai.isSystemApp() ? CONDITIONALLY_UNAVAILABLE : AVAILABLE;
    }

    @Override
    public void updateState(Preference preference) {
        super.updateState(preference);

        GosPackageState ps = GosPackageState.get(getPackageName());

        boolean checked = ps != null && ps.hasFlags(GosPackageState.FLAG_ENABLE_EXPLOIT_PROTECTION_COMPAT_MODE);

        ((SwitchPreference) preference).setChecked(checked);
    }

    @Override
    public boolean onPreferenceChange(Preference preference, Object newValue) {
        boolean checked = (boolean) newValue;

        Runnable r = () -> {
            GosPackageState.edit(getPackageName())
                    .setFlagsState(GosPackageState.FLAG_ENABLE_EXPLOIT_PROTECTION_COMPAT_MODE, checked)
                    .killUidAfterApply()
                    .apply();

            if (!mParent.refreshUi()) {
                mParent.finish();
            }
        };

        if (checked) {
            var d = AswExploitProtectionFragment.getExploitProtectionWarningOnDisable(mContext, r);
            d.show();
            return false;
        }

        r.run();

        return true;
    }

    private String getPackageName() {
        return mParent.getPackageInfo().packageName;
    }
}
